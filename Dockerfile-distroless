# Dockerfile.distroless
# Stage 1: build (Debian-based so runtime artifacts are compatible with distroless)
FROM python:3.11-slim AS build

# Set working dir for build
WORKDIR /build

# Install Python packages into /usr/local (same layout as normal pip installs)
COPY requirements.txt .
RUN pip install --no-cache-dir --prefix=/usr/local -r requirements.txt

# Copy application
WORKDIR /app
COPY app.py /app

# Stage 2: minimal distroless runtime (Debian 12 distroless Python)
FROM gcr.io/distroless/python3-debian12

WORKDIR /app

# Copy runtime Python packages installed in build stage
# and copy application code
COPY --from=build /usr/local /usr/local
COPY --from=build /app /app

# Expose port used by the Flask app
EXPOSE 8080

# Ensure PYTHONPATH points to site-packages for Python 3.11
ENV PYTHONPATH=/usr/local/lib/python3.11/site-packages

# Run as non-root (distroless provides nonroot user)
USER nonroot

# Use explicit python executable and absolute path to app for clarity
CMD ["/app/app.py"]
